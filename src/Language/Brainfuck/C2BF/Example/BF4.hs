module Language.Brainfuck.C2BF.Example.BF4
  ( hello4
  , echo4
  -- , fib4
  -- , countdown4
  -- , prime4
  , pic4
  , pic_4
  , pic'4
  ) where

import Data.Char (ord)
import Language.Brainfuck.C2BF.BF1
import Language.Brainfuck.C2BF.BF4

hello4 :: BF4Code
hello4 = [ Init4 (ord 'H') $ \h ->
         [ Init4 (ord 'e') $ \e ->
         [ Init4 (ord ',') $ \s ->
           [ put h, put e
           , e += (ord 'l' - ord 'e'), put e, put e
           , e += (ord 'o' - ord 'l'), put e, put s
           , s += (ord ' ' - ord ','), put s
           , e += (ord 'w' - ord 'o'), put e
           , e += (ord 'o' - ord 'w'), put e
           , e += (ord 'r' - ord 'o'), put e
           , e += (ord 'l' - ord 'r'), put e
           , e += (ord 'd' - ord 'l'), put e
         ] ] ] ]
{-
+++++++++[->++++++++>+++++++++++>+++++<<<]>>++>-<<.>.+++++++..+++.>.------------
.<++++++++.--------.+++.------.--------.
+++++++++[->++++++++>+++++++++++>+++++<<<]>.>++.+++++++..+++.>-.------------.<++
++++++.--------.+++.------.--------.
-}

echo4 :: BF4Code
echo4 = [ Init4 1 $ \x -> [ Init4 0 $ \c -> [ While4 x [ get c, put c ] ] ] ]
{-
+[>,.<]
-}

-- fib4 :: BF4Code
-- fib4 = [ Init4 (ord ',') $ \comma ->
--        [ Init4 (ord ' ') $ \space ->
--        [ Init4 0 $ \fibb ->             -- fibb (previous value)
--        [ Init4 13 $ \counter ->       -- counter
--        [ Init4 1 $ \fiba ->         -- fiba (new value)
--          [ While4 counter
--            [ PrintCharD4 fiba
--            , IfPos4' counter [ put comma, put space ]
--            , Copy4 fiba $ \temp ->         -- temp = fiba
--              [ MoveAdd4 fibb [ fiba ]      -- fiba += fibb; fibb = 0;
--              , MoveAdd4 temp [ fibb ]      -- fibb += temp; temp = 0;
--              ]
--            , counter -= 1
--        ] ] ] ] ] ] ]

{-
++>++>>+>+<<++++++[-<<+++++++>+++++>>++<]>[>>>++++++++++<<[->+>-[>+>>]>[+[-<+>]>
+>>]<<<<<<]>>[-]>>>++++++++++<[->-[>+>>]>[+[-<+>]>+>>]<<<<<]>[-]>>[>++++++[-<+++
+++++>]<.<<+>+>[-]]<[<[->-<]>>++++++[-<++++++++>]<.[-]]<<++++++[-<++++++++>]<.[-
]<<[-<+>]<<[->>+>+<<<]>>>[-<<<+>>>]<-[<<<<<.>.>>>>[-]]<[->+>+<<]>>[-<<+>>]<<<<[-
>>+<<]>>>[-<<<+>>>]<<-]
>>>>>+++++++++++[-<<+<<+++<++++>>>>>]<+<++<<->>[>>>++++++++++<<[->+>-[>+>>]>[+[-
<+>]>+>>]<<<<<<]>>[-]>>>++++++++++<[->-[>+>>]>[+[-<+>]>+>>]<<<<<]>[-]>>[>++++++[
-<++++++++>]<.<<+>+>[-]]<[<[->-<]>>++++++[-<++++++++>]<.[-]]<<++++++[-<++++++++>
]<.[-]<<[-<+>]<<[->>+>+<<<]>>>[-<<<+>>>]<-[<<<<<.>.>>>>[-]]<[->+>+<<]>>[-<<+>>]<
<<<[->>+<<]>>>[-<<<+>>>]<<-]
>>+++++++++++[-<<++++>+++>>+<]>>+<++<<->>[>>>++++++++++<<[->+>-[>+>>]>[+[-<+>]>+
>>]<<<<<<]>>[-]>>>++++++++++<[->-[>+>>]>[+[-<+>]>+>>]<<<<<]>[-]>>[>++++++[-<++++
++++>]<.<<+>+>[-]]<[<[->-<]>>++++++[-<++++++++>]<.[-]]<<++++++[-<++++++++>]<.[-]
<<[-<+>]<<[->>+>+<<<]>>>[-<<<+>>>]<-[<<<<<.>.>>>>[-]]<[->+>+<<]>>[-<<+>>]<<<<[->
>+<<]>>>[-<<<+>>>]<<-]
>>+++++++++++[-<<++++>+++>>+<]>>+<++<<->>[>>>++++++++++<<[->+>-[>+>>]>[+[-<+>]>+
>>]<<<<<<]>[-<+>]>[-]>>>++++++++++<[->-[>+>>]>[+[-<+>]>+>>]<<<<<]>[-]>>[>++++++[
-<++++++++>]<.<<+>+>[-]]<[<[->-<]++++++[->++++++++<]>.[-]]<<++++++[-<++++++++>]<
.[-]<<<<[->>>>+>+<<<<<]>>>>>[-<<<<<+>>>>>]<-[<<<<<<<.>.>>>>>>[-]]<<<[->>+>+<<<]>
>>[-<<<+>>>]<<<<<[->>+<<]>>>>[-<<<<+>>>>]<<<-]
>>+++++++++++[-<<++++>+++>>+<]>>+<++<<->>[>>>++++++++++<<[->+>-[>+>>]>[+[-<+>]>+
>>]<<<<<<]>[-<+>]>[-]>>>++++++++++<[->-[>+>>]>[+[-<+>]>+>>]<<<<<]>[-]>>[>++++++[
-<++++++++>]<.<<+>+>[-]]<[<[->-<]++++++[->++++++++<]>.[-]]<<++++++[-<++++++++>]<
.[-]<<<<[->>>+>+<<<<]>>>>[-<<<<+>>>>]<-[<<<<<<.>.>>>>>[-]]<<[->>+>+<<<]>>>[-<<<+
>>>]<<<<<[->>+<<]>>>>[-<<<<+>>>>]<<<-]
+++++++++++[->++++>+++>>+<<<<]>>->>++>+<[>>>++++++++++<<[->+>-[>+>>]>[+[-<+>]>+>
>]<<<<<<]>[-<+>]>[-]>>>++++++++++<[->-[>+>>]>[+[-<+>]>+>>]<<<<<]>[-]>>[>++++++[-
<++++++++>]<.<<+>+>[-]]<[<[->-<]++++++[->++++++++<]>.[-]]>[-]<<<++++++[-<+++++++
+>]<.[-]<<<<[->>+>+<<<]>>>[-<<<+>>>]<-[<<<<<.>.>>>>[-]]<[->+>+<<]>>[-<<+>>]<<<<[
->>+<<]>>>[-<<<+>>>]<<-]
-}

-- countdown4  :: BF4Code
-- countdown4 = [ Init4 (ord ',') $ \comma ->
--              [ Init4 255 $ \num ->
--                [ While4 num
--                  [ PrintCharD4 num
--                  , num -= 1
--                  , put comma
--                  ]
--                  , comma += ord '0' - ord ','
--                  , put comma
--              ] ] ]
{-
>>>+++[-<+++++>]<[-<<+++>+++++++++++++++++>]<<->[>>++++++++++<<[->+>-[>+>>]>[+[-
<+>]>+>>]<<<<<<]>>[-]>>>++++++++++<[->-[>+>>]>[+[-<+>]>+>>]<<<<<]>[-]>>[>++++++[
-<++++++++>]<.<<+>+>[-]]<[<[->-<]>>++++++[-<++++++++>]<.[-]]<<++++++[-<++++++++>
]<.[-]<<[-<+>]<-<.>]<++++.
>>+++++++++++++++[-<<+++>+++++++++++++++++>]<<->[>>++++++++++<<[->+>-[>+>>]>[+[-
<+>]>+>>]<<<<<<]>[-<+>]>[-]>>>++++++++++<[->-[>+>>]>[+[-<+>]>+>>]<<<<<]>[-]>>[>+
+++++[-<++++++++>]<.<<+>+>[-]]<[<[->-<]++++++[->++++++++<]>.[-]]<<++++++[-<+++++
+++>]<.[-]<<<-<.>]<++++.
+++++++++++++++[->+++>+++++++++++++++++<<]>->[>>++++++++++<<[->+>-[>+>>]>[+[-<+>
]>+>>]<<<<<<]>[-<+>]>[-]>>>++++++++++<[->-[>+>>]>[+[-<+>]>+>>]<<<<<]>[-]>>[>++++
++[-<++++++++>]<.<<+>+>[-]]<[<[->-<]++++++[->++++++++<]>.[-]]>[-]<<<++++++[-<+++
+++++>]<.[-]<<<-<.>]<++++.
-}

-- prime4 :: BF4Code
-- prime4 = [ Init4 (ord '2') $ \two ->
--          [ Init4 (ord ' ') $ \space ->
--          [ Init4 0 $ \u ->
--          [ Init4 1 $ \q ->
--          [ Init4 3 $ \p ->
--            [ put two
--            , While4 p
--              [ AssignZero4 q
--              , AddI4 q 2
--              , AssignZero4 u
--              , AddI4 u 1
--              , Init4 1 (\t ->
--                [ While4 t
--                  [ ModDiv4'' p q (\m _ -> [ IfNot4 m [ AssignZero4 u ] ])
--                  , p -= 1
--                  , IfGtEq4 q p [ t -= 1 ]
--                  , p += 1
--                  , IfGtI4 q 13 [ If4 t [ t -= 1 ] ]
--                  , AddI4 q 1 ] ])
--              , If4 u [ Put4 space, PrintCharD4 p ]
--              , AddI4 p 1
--          ] ] ] ] ] ] ]
{-
++++++++++[->+++++>++++>+++<<<]>>++++>++>>+>+++<<<<<.>>>>>[<[-]++<[-]+>>>+[<[->>
+<<]<[->>>>+>+<<<<<]>>>>[-<<<<+>>>>]<[->+>-[>+>>]>[+[-<+>]>+>>]<<<<<<]>[-<<<+>>>
]>[-]>[-<<+>+>]<<[->>+<<]+>[<[-]>[-]]<[<<<<<[-]>>>>>[-]]>[-]>[-]>[-]<<<<<<-<[->>
>+>+<<<<]>>>>[-<<<<+>>>>]<<<[->>>>+>+<<<<<]>>>>>[-<<<<<+>>>>>]<<<+[->>[->+>+<<]>
>[-<<+>>]+<[>-<<->[-]]>[<<<+<[-]>>>>[-]]<[-]<<<]>>[-]<[<<->>[-]]<[-]<<+<[->>>+>+
<<<<]>>>>[-<<<<+>>>>]>+++++++++++++<<[->>[->+>+<<]>>[-<<+>>]+<[>-<<->[-]]>[<<<+<
[-]>>>>[-]]<[-]<<<]>>[-]<[<<[-[-]]>>[-]]<[-]<<<+>>]<<<[<.>>>>>++++++++++<<[->+>-
[>+>>]>[+[-<+>]>+>>]<<<<<<]>[-<+>]>[-]>>>++++++++++<[->-[>+>>]>[+[-<+>]>+>>]<<<<
<]>[-]>>[>++++++[-<++++++++>]<.<<+>+>[-]]<[<[->-<]++++++[->++++++++<]>.[-]]>[-]<
<<++++++[-<++++++++>]<.[-]<<<<<[-]]>>+]
-}

pic4 :: BF4Code
pic4 = let n = 35
           in [ Init4 n $ \x ->
              [ Init4 n $ \y ->
              [ Init4 (ord '\n') $ \nl ->
              [ Init4 0 $ \temp ->
              [ While4 x
                [ x -= 1
                , While4 y
                  [ y -= 1
                  , Copy4 x $ \xx ->
                  [ Copy4 y $ \yy ->
                  [ IfGtIElse4 yy (div n 2)
                    [ temp += (n - 1), MoveSub4 yy [temp] ]
                    [ MoveAdd4 yy [temp] ]
                  , IfGtIElse4 xx (div n 2)
                    [ temp += (n - 1), MoveSub4 xx [temp] ]
                    [ MoveAdd4 xx [temp] ]
                  , IfGtI4 temp 9 [ temp += 7 ]
                  , temp += 48
                  , put temp
                  , Free4 temp
                  ]
                ]
              ]
            , y += n
            , put nl
            ] ] ] ] ] ]

pic'4 :: BF4Code
pic'4 = let n = 30
            in [ Init4 n $ \x ->
               [ Init4 n $ \y ->
               [ Init4 (ord '\n') $ \nl ->
               [ Init4 226 $ \cir1 ->
               [ Init4 152 $ \cir2 ->
               [ Init4 134 $ \cir3 ->
               [ Init4 0 $ \temp ->
               [ Init4 0 $ \tempp ->
               [ Init4 0 $ \temppp ->
               [ While4 x
                 [ x -= 1
                 , While4 y
                   [ y -= 1
                   , Copy4 x $ \xx ->
                   [ Copy4 y $ \yy ->
                   [ IfGtIElse4 yy (div n 2)
                     [ yy -= div n 2, Add4 yy [temp], MultTo4 yy temp ]
                     [ tempp += div n 2
                     , Sub4 yy [tempp]
                     , Add4 tempp [temp]
                     , MultTo4 tempp temp ]
                   , Free4 yy
                   , IfGtIElse4 xx (div n 2)
                     [ xx -= div n 2, Add4 xx [tempp], MultTo4 xx tempp ]
                     [ temppp += div n 2
                     , Sub4 xx [temppp]
                     , Add4 temppp [tempp]
                     , MultTo4 temppp tempp ]
                   , Free4 xx
                   , MoveAdd4 tempp [temp]
                   , IfGtIElse4 temp 200
                     [ cir1 += 1, put cir1, cir1 -= 1
                     , cir2  -= 24, put cir2, cir2 += 24
                     , cir3 -= 6, put cir3, cir3 += 6 ]
                     [ put cir1, put cir2, put cir3 ]
                   , Free4 temp
                   , Free4 tempp
                   , Free4 temppp
                   ]
                 ]
               ]
             , y += n
             , put nl
             ] ] ] ] ] ] ] ] ]] ]

pic_4 :: BF4Code
pic_4 = let n = 41
            n0 = div n 4
            n1 = div n 2
            n2 = n0 + n1
            in [ Init4 n $ \x ->
               [ Init4 n $ \y ->
               [ Init4 (ord '\n') $ \nl ->
               [ Init4 0 $ \temp ->
               [ While4 x
                 [ x -= 1
                 , While4 y
                   [ y -= 1
                   , Copy4 x $ \xx ->
                   [ Copy4 y $ \yy ->
                   [ IfGtIElse4 yy n0
                     [ IfGtIElse4 yy n1
                       [ IfGtIElse4 yy n2
                         [ temp += (n - 1), MoveSub4 yy [temp] ]
                         [ temp -= n1, MoveAdd4 yy [temp] ] ]
                       [ temp += n1, MoveSub4 yy [temp] ] ]
                     [ MoveAdd4 yy [temp] ]
                   , IfGtIElse4 xx n0
                     [ IfGtIElse4 xx n1
                       [ IfGtIElse4 xx n2
                         [ temp += (n - 1), MoveSub4 xx [temp] ]
                         [ temp -= n1, MoveAdd4 xx [temp] ] ]
                       [ temp += n1, MoveSub4 xx [temp] ] ]
                     [ MoveAdd4 xx [temp] ]
                   , IfGtI4 temp 9 [ temp += 7 ]
                   , temp += 48
                   , put temp
                   , put temp
                   , Free4 temp
                   ]
                 ]
               ]
             , y += n
             , put nl
             ] ] ] ] ] ]

